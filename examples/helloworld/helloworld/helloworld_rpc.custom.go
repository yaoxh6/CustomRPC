// Code generated by protoc-gen-custom. DO NOT EDIT.
// source: examples/helloworld/helloworld/helloworld.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	json "encoding/json"
	rpc "github.com/yaoxh6/CustomRPC/rpc"
	client "github.com/yaoxh6/CustomRPC/rpc/client"
	transport "github.com/yaoxh6/CustomRPC/rpc/transport"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for Greeter service

type GreeterCustomClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...client.Option) (*HelloReply, error)
}

type greeterCustomClient struct {
	c client.Client
}

func NewGreeterCustomClient(name string, h *rpc.CustomService) GreeterCustomClient {
	return &greeterCustomClient{
		c: client.NewCustomClient(h, "Greeter"),
	}
}

func (c *greeterCustomClient) SayHello(ctx context.Context, in *HelloRequest, opts ...client.Option) (*HelloReply, error) {
	var err error
	helloReply_ := new(HelloReply)
	return helloReply_, err
}

// Server API for Greeter service

const GreeterCustomServer_ServiceName = "Greeter"

type GreeterCustomServer interface {
	// Sends a greeting
	SayHello(ctx context.Context, helloRequest *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterServer(h rpc.Service, svr GreeterCustomServer) error {
	return h.Register(nil, &greeterHandler{svr})
}

type greeterHandler struct {
	GreeterCustomServer
}

func (h *greeterHandler) SayHello(ctx context.Context, helloRequest *HelloRequest) (*HelloReply, error) {
	return h.GreeterCustomServer.SayHello(ctx, helloRequest)
}
